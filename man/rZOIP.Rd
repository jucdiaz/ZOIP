% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rZOIP.R
\name{rZOIP}
\alias{rZOIP}
\title{ZOIP Distribution}
\usage{
dZOIP(x, mu = 0.5, sigma = 0.1, p0 = 0.08333333, p1 = 0.08333333,family='R-S', log = FALSE)
pZOIP(q, mu = 0.5, sigma = 0.1, p0 = 0.08333333, p1 = 0.08333333,family='R-S',lower.tail = TRUE, log.p = FALSE)
qZOIP(p, mu = 0.5, sigma = 0.1, p0 = 0.08333333, p1 = 0.08333333,family='R-S',lower.tail = TRUE, log.p = FALSE)
rZOIP(n, mu = 0.5, sigma = 0.1,p0 = 0.08333333, p1 = 0.08333333,family='R-S')
}
\arguments{
\item{n}{number of observations. If length (n)> 1, the length is taken to be the number required.}

\item{mu}{vector of location parameters.}

\item{sigma}{vector of scale parameters.}

\item{p0}{parameter of proportion of zeros.}

\item{p1}{Parameter of proportion of ones.}

\item{family}{choice of the parameterization or distribution, family = 'R-S' parameterization beta distribution Rigby and Stasinopoulos, 'F-C' distribution Beta parametrization Ferrari and Cribari-Neto, 'Original' Beta distribution classic parameterization, 'Simplex' simplex distribution.}
}
\description{
The rZOIP function defines the random number generating function for the ZOIP distribution.
}
\details{
x has ZOIP distribution with shape parameters "\eqn{\mu}", scale "\eqn{\sigma}", proportion of zeros "\eqn{p0}" and proportion of ones "\eqn{ p1} ",
has density: \eqn{p0} if \eqn{x = 0}, \eqn{p1} if \eqn{x = 1}, \eqn{(1-p0-p1) f (x; \mu, \sigma)} yes \eqn{0 <x <1}.

where \eqn{p0 ≥ 0} represents the probability that \eqn{x = 0, p1 ≥ 0} represents the probability
that \eqn{x = 1, 0 ≤ p0 + p1 ≤ 1} and \eqn{f (x; \mu, \sigma)} represents some of the functions of
probability density for proportional data, such as the beta distribution with its different parameterizations
and the simplex distribution.

When family =' R-S 'uses the beta distribution with beta parameterization Rigby and Stasinopoulos (2005) which has a beta distribution function.
\eqn{\mu} is the parameter of mean and shape, plus \eqn{\sigma} is the dispersion parameter of the distribution.
family =' F-C 'distribution Beta parametrization Ferrari and Cribari-Neto (2004), where \eqn{\sigma = \phi}, \eqn{\phi} is a precision parameter.
family =' Original 'beta distribution original parametrization where \eqn{\mu = a}, a parameter of form 1; \eqn{\sigma = b}, b parameter of form 2.
family =' Simplex 'simplex distribution. proposed by Barndorff-Nielsen and Jørgensen (1991)
}
\examples{
plot(density(rBEINF(n=1000, mu = 0.5, sigma = 0.1, nu = 0.1, tau = 0.1)))
plot(density(rZOIP(n=1000, mu = 0.5, sigma = 0.1)))
plot(density(rBEINF0(n=1000, mu = 0.5, sigma = 0.1, nu = 0.1)))
plot(density(rZOIP(n=1000, mu = 0.5, sigma = 0.1,p0=0.09090909091,p1=0)))
plot(density(rBEINF1(n=1000, mu = 0.5, sigma = 0.1, nu = 0.1)))
plot(density(rZOIP(n=1000, mu = 0.5, sigma = 0.1,p0=0,p1=0.09090909091)))
plot(density(rbeta(n=1000,0.6,2.4)))
plot(density(rZOIP(n=1000, mu = 0.6, sigma =2.4,p0=0,p1=0,family='Original')))

a1<-rZOIP(n=1000, mu = 0.2, sigma = 0.5, p0 = 0.2, p1 = 0.2,family='R-S')
a2<-rZOIP(n=1000, mu = 0.2, sigma = 3, p0 = 0.2, p1 = 0.2,family='F-C')
a3<-rZOIP(n=1000, mu = 0.6, sigma = 2.4, p0 = 0.2, p1 = 0.2,family='Original')
system.time(a4<-rZOIP(n=10, mu = 0.2, sigma = 3, p0 = 0.2, p1 = 0.2,family='Simplex'))

plot(density(a1))
plot(density(a2))
plot(density(a3))
plot(density(a4))

a1<-rZOIP(n=1000, mu = 0.2, sigma = 0.5, p0 = 0.2, p1 = 0,family='R-S')
a2<-rZOIP(n=1000, mu = 0.2, sigma = 3, p0 = 0.2, p1 = 0,family='F-C')
a3<-rZOIP(n=1000, mu = 0.6, sigma = 2.4, p0 = 0.2, p1 = 0,family='Original')
system.time(a4<-rZOIP(n=10, mu = 0.2, sigma = 3, p0 = 0.2, p1 = 0,family='Simplex'))

plot(density(a1))
plot(density(a2))
plot(density(a3))
plot(density(a4))

a1<-rZOIP(n=1000, mu = 0.2, sigma = 0.5, p0 = 0, p1 = 0.2,family='R-S')
a2<-rZOIP(n=1000, mu = 0.2, sigma = 3, p0 = 0, p1 = 0.2,family='F-C')
a3<-rZOIP(n=1000, mu = 0.6, sigma = 2.4, p0 = 0, p1 = 0.2,family='Original')
system.time(a4<-rZOIP(n=10, mu = 0.2, sigma = 3, p0 = 0, p1 = 0.2,family='Simplex'))

plot(density(a1))
plot(density(a2))
plot(density(a3))
plot(density(a4))
}
