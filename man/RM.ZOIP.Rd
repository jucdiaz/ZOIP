% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RMZOIP.R
\name{RM.ZOIP}
\alias{RM.ZOIP}
\title{Regresion ZOIP}
\usage{
RM.ZOIP2(formula.mu,formula.sigma=~1,formula.p0=~1,formula.p1=~1,data,link=c('identity','identity','identity','identity'),family='R-S')
}
\arguments{
\item{formula.mu}{Formula que define la funcion de regresion para mu, p.e y~x1+x2, es necesario definir la variable respuesta.}

\item{formula.sigma}{Formula que define la funcion de regresion para sigma, p.e ~x1, es necesario definir la variable respuesta.}

\item{formula.p0}{Formula que define la funcion de regresion para p0, p.e ~x1, es necesario definir la variable respuesta.}

\item{formula.p1}{Formula que define la funcion de regresion para p1, p.e ~x1, es necesario definir la variable respuesta.}

\item{data}{Datos en fomato data.frame donde debe contener las nombres de las columnas tal cual como estan en las formulas.}

\item{link}{Eleccion de la funcion de enlace, se elige a cada parametro a estimar de acuerdo a las opciones de familia y formula, ver detalles y vignettes.}

\item{family}{Eleccion de la parametrizacion o distribucion deseada, family='R-S' parametrizacion distribucion beta Rigby y Stasinopoulos, 'F-C' distribucion Beta parametrizacion Ferrari y Cribari-Neto, Original distribucion beta parametrizacion original, 'Simplex' distribucion simplex. por defecto 'R-S'}

\item{optimizer}{Eleccion del optimizador, utilizado para la convergencia de la maxima verosimilitud.}
}
\description{
la funcion RM.ZOIP ajusta un modelo de regresion ZOIP via maxima verosimilitud. el modelo puede incluir o no
covariables en cualquiera de sus parametros, asi como puede ser un modelo inflado bilateralmente, unilateralmente o sin parametros
inflados
}
\examples{

#Test 1--------------------------------------------------
library(boot)
library(numDeriv)
n<-1000
x1<-runif(n)
x2<-runif(n)

b1<-0.3
b2<--0.5
b3<-0.9
sigma_i<-exp(b1+b2*x1+b3*x2)

c1<-0.2
c2<--1
c3<-0.1
mu_i<-exp(c1+c2*x1)

d1<-0.07
p0_i<-rep(d1,length(n))

e1<-0.02
e2<--4
p1_i<-inv.logit(e1+e2*x2)

param<-cbind(mu_i,sigma_i,p0_i,p1_i)

system.time(y_i<-apply(param,1,function(x){rZOIP(1,mu=x[1],sigma=x[2],p0=x[3],p1=x[4],family='Original')}))
data<-as.data.frame(cbind(y_i,x1,x2))

formula.mu=y_i~x1
formula.sigma=~x1+x2
formula.p0=~1
formula.p1=~x2
link=c('log','log','identity','logit')
family='Original'
mod<-RM.ZOIP(formula.mu=formula.mu,formula.sigma=formula.sigma,formula.p0=formula.p0,formula.p1=formula.p1,data=data,link=link,family=family)
mod
summary(mod)

#Test 2--------------------------------------------------

n<-1000
x1<-runif(n)
x2<-runif(n)

b1<-0.3
b2<--0.5
b3<-0.9
sigma_i<-exp(b1+b2*x1+b3*x2)

c1<-0.2
c2<--1
c3<-0.1
mu_i<-exp(c1+c2*x1)

d1<-0.07
p0_i<-rep(d1,length(n))

d1<-0
p1_i<-rep(d1,length(n))


param<-cbind(mu_i,sigma_i,p0_i,p1_i)

system.time(y_i<-apply(param,1,function(x){rZOIP(1,mu=x[1],sigma=x[2],p0=x[3],p1=x[4],family='Original')}))
data<-as.data.frame(cbind(y_i,x1,x2))

formula.mu=y_i~x1
formula.sigma=~x1+x2
formula.p0=~1
formula.p1=~1
link=c('log','log','identity','identity')
family='Original'
mod<-RM.ZOIP(formula.mu=formula.mu,formula.sigma=formula.sigma,formula.p0=formula.p0,formula.p1=formula.p1,data=data,link=link,family=family)
mod
summary(mod)

}

